---

- name: ensure kube-specific security groups exist in proper state
  ec2_group:
    state: present
    name: "kubernetes-{{ item.key }}-{{ env }}"
    # name: "{{env}}_{{item.key}}"
    description: "kubernetes-{{ item.key }}-{{ env }}"
    vpc_id: "{{ aws_vpc_id }}"
    region: "{{ aws_region }}"
    rules: "{{ item.value.ingress | flatten }}"
  with_dict: "{{ security_rules }}"
  register: sgs
  vars:
    vpc_all_traffic:
      - {cidr_ip: "{{ aws_vpc_cidr }}", proto: 'tcp',   from_port: '1',   to_port: '65535'} # all tcp traffic
      - {cidr_ip: "{{ aws_vpc_cidr }}", proto: 'udp',   from_port: '1',   to_port: '65535'} # all udp traffic
      - {cidr_ip: "{{ aws_vpc_cidr }}", proto: 'icmp',  from_port: '-1',  to_port: '-1'}    # all icmp traffic
    world_all_traffic:
      - {cidr_ip: '0.0.0.0/0', proto: 'tcp',   from_port: '1',   to_port: '65535'} # all tcp traffic
      - {cidr_ip: '0.0.0.0/0', proto: 'udp',   from_port: '1',   to_port: '65535'} # all udp traffic
      - {cidr_ip: '0.0.0.0/0', proto: 'icmp',  from_port: '-1',  to_port: '-1'}    # all icmp traffic
    world_https:
      - {cidr_ip: '0.0.0.0/0',        proto: 'tcp',   from_port: '443', to_port: '443'}   # https
    world_ssh:
      - {cidr_ip: '0.0.0.0/0',        proto: 'tcp',   from_port: '22',  to_port: '22'} # ssh
    security_rules:
      master:
        ingress:
          - "{{ world_ssh }}"
          # the kube-up setting is open to the world- using working_dmz instead.
          # - "{{ world_https }}"
          - {group_name: "working_dmz", proto: 'tcp', from_port: '443', to_port: '443' }
          - {group_name: "kubernetes-minion-working", proto: 'all' }
          - {group_name: "kubernetes-master-working", proto: 'all' }
        egress:
          # this is the default from kube-up. It can be revisited, but will need to include the kubernetes internal cluster network as well.
          - "{{ world_all_traffic }}"
      minion:
        ingress:
          - "{{ world_ssh }}"
          - {group_name: "kubernetes-minion-working", proto: 'all' }
          - {group_name: "kubernetes-master-working", proto: 'all' }
        egress:
          # see comment regarding master egress
          - "{{ world_all_traffic }}"


# - name: tag security groups
#   local_action:
#     module: ec2_tag
#     resource: "{{item.group_id}}"
#     region: "{{ aws_region }}"
#     state: present
#     tags:
#       Source: "{{org_name}}"
#       Name: "{{env}}_{{item.item.key}}"
#       Env: "{{env}}"
#   with_items: sgs.results
