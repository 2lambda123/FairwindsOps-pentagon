#Copyright 2017 Reactive Ops Inc.
#
#Licensed under the Apache License, Version 2.0 (the “License”);
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an “AS IS” BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

machine:
  environment:
    PATH: $PATH:node_modules/.bin
    EXTERNAL_REGISTRY_BASE_DOMAIN: 246816220336.dkr.ecr.us-west-2.amazonaws.com
    REPOSITORY_NAME: pentagon
    REGISTRY_EMAIL: none
    REGISTRY_USERNAME: AWS

    CI_SHA1: $CIRCLE_SHA1
    CI_BRANCH: $CIRCLE_BRANCH
    CI_BUILD_NUM: $CIRCLE_BUILD_NUM

    DOCKERTAG: pentagon
    SERVICENAME: pentagon

    CLUSTER_NICKNAME_PRODUCTION: production-1.reactiveops.io
    CLUSTER_NICKNAME_WORKING: working-1.reactiveops.io

  services:
    - docker

dependencies:
  pre:
    - pip install -r lib/pentagon/tests/requirements.txt
    - pip install ./
    - npm install
    - docker-pull
    - docker build --rm=false -t ${DOCKERTAG}:latest .

  override:
    - echo "overriding inferred dependencies"

database:
  override:
    - echo "overriding inferred dependencies"

test:
  override:
    # - docker run $DOCKERTAG bundle exec rake test
    - nosetests lib/pentagon/tests/

deployment:
  development:
    # branch: /feature-.*/
    branch: docs
    commands:
      - docker-push -f deploy/development.config
      - ensure-kubectl
      - prepare-kubectl
      - kubectl config set-context development --user $CLUSTER_NICKNAME_WORKING --cluster $CLUSTER_NICKNAME_WORKING --namespace development
      - kubectl config use-context development
      - k8s-deploy -f deploy/development.config

  staging:
    branch: master
    commands:
      - docker-push -f deploy/staging.config
      - ensure-kubectl
      - prepare-kubectl
      - kubectl config set-context staging --user $CLUSTER_NICKNAME_WORKING --cluster $CLUSTER_NICKNAME_WORKING --namespace staging
      - kubectl config use-context staging
      - k8s-deploy -f deploy/staging.config

  production:
    tag: /release-.*/
    commands:
      # to be removed:
      # - docker-push -f deploy/production.config
      - ensure-kubectl
      - prepare-kubectl
      - kubectl config set-context production --user $CLUSTER_NICKNAME_PRODUCTION --cluster $CLUSTER_NICKNAME_PRODUCTION --namespace production
      - kubectl config use-context production
      - k8s-deploy -f deploy/production.config
