{%- if not network_mask -%}
{%- set network_mask = 24 -%}
{%- endif -%}
{%- if not third_octet -%}
{%- set third_octet = 16 -%}
{%- endif -%}
apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: {{ cluster_name }}
spec:
  {%- if additional_policies %}
  additional_policies: |
   {{ additional_policies|indent(4) }}
  {%- endif %}
  api:
    loadBalancer:
      type: Public
  authorization:
    alwaysAllow: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://{{ kops_state_store_bucket }}/{{ cluster_name }}
  dnsZone: {{ cluster_dns }}
  etcdClusters:
  - etcdMembers:
    {%- for az in master_availability_zones %}
    - instanceGroup: master-{{ az }}
      name: {{ az }}
    {%- endfor %}
    name: main
  - etcdMembers:
    {%- for az in master_availability_zones %}
    - instanceGroup: master-{{ az }}
      name: {{ az }}
    {%- endfor %}
    name: events
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: {{ kubernetes_version }}
  masterPublicName: api.{{ cluster_name }}
  networkCIDR: 172.20.0.0/16
  networkID: {{ vpc_id }}
  networking:
    weave:
      mtu: 8912
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  subnets:
  {%- for az in availability_zones %}
  - cidr: {{ "172.20." + ((third_octet|int)+loop.index-1)|string + ".0/" + network_mask|string }}
    name: {{ az }}
    type: Private
    zone: {{ az }}
    egress: {{ nat_gateways[loop.index] }}
  {%- endfor -%}
  {%- for az in availability_zones %}
  - cidr: {{ "172.20." + ((third_octet|int)+loop.index-1+4)|string + ".0/" + network_mask|string }}
    name: utility-{{ az }}
    type: Utility
    zone: {{ az }}
  {%- endfor %}  
  topology:
    dns:
      type: Public
    masters: private
    nodes: private
