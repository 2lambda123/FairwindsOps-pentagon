apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: {{ kops_cluster_name }}
spec:
  api:
    loadBalancer:
      type: Public
  authorization:
    alwaysAllow: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://{{ kops_state_store_bucket }}/{{ kops_cluster_name }}
  dnsZone: {{ aws_hosted_zone_name }}
  etcdClusters:
  - name: main
    etcdMembers:
    {% for ig, ig_name in instancegroups %}
    - instanceGroup: {{ ig }}
      name: {{ ig_name }}
    {% endfor %}
  - name: events
    etcdMembers:
    {% for ig, ig_name in instancegroups %}
    - instanceGroup: {{ ig }}
      name: {{ ig_name }}
    {% endfor %}
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: {{ kubernetes_version }}
  masterInternalName: api.internal.{{ kops_cluster_name }}
  masterPublicName: api.{{ kops_cluster_name }}
  networkCIDR: {{ kubernetes_network_cidr }}
  networkID: {{ aws_vpc_id }}
  networking:
    weave:
      mtu: 8912
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  subnets:
  {% for subnet in subnets %}
  - cidr: {{ subnet['cidr'] }}
    egress: {{ subnet['nat_id'] }}
    name: {{ subnet['name'] }}
    type: {{ subnet['type'] }}
    zone: {{ subnet['zone'] }}
  {% endfor %}
  topology:
    dns:
      type: Public
    masters: private
    nodes: private
